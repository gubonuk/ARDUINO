#include <WiFi.h>
#include <PubSubClient.h>

const int LED_PIN = 19;

// WiFi, MQTT 정보
const char* ssid = "";
const char* pass = "";
const char* mqttServer = "192.168.0.14"; // 라즈베리파이 IP
const int   mqttPort   = 1883;
const char* mqttUser   = "myusername";
const char* mqttPass   = "1234";

WiFiClient espClient;
PubSubClient client(espClient);

// 콜백 함수
void callback(char* topic, byte* payload, unsigned int length) {
  String msg;
  for (int i = 0; i < length; i++) {
    msg += (char)payload[i];
  }
  Serial.print("[수신] 토픽: ");
  Serial.println(topic);
  Serial.print("[수신] 메시지: ");
  Serial.println(msg);

  if (msg == "on") {
    digitalWrite(LED_PIN, HIGH);
    Serial.println("[동작] LED ON"); // <-- 추가
  } else if (msg == "off") {
    digitalWrite(LED_PIN, LOW);
    Serial.println("[동작] LED OFF"); // <-- 추가
  }
}

void reconnect() {
  // 브로커 재연결 루프
  while (!client.connected()) {
    Serial.println("[MQTT] 브로커 연결 시도..."); // <-- 추가
    if (client.connect("ESP32Client", mqttUser, mqttPass)) {
      Serial.println("[MQTT] 연결 성공!"); // <-- 추가
      client.subscribe("cmd/led");
      Serial.println("[MQTT] cmd/led 토픽 구독 완료"); // <-- 추가
    } else {
      Serial.print("[MQTT] 연결 실패, 에러코드: ");
      Serial.print(client.state());
      Serial.println(" (2초 후 재시도)");
      delay(2000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW);

  Serial.println("[WiFi] 연결 중...");
  WiFi.begin(ssid, pass);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\n[WiFi] 연결 성공");
  Serial.print("[WiFi] IP 주소: ");
  Serial.println(WiFi.localIP());

  client.setServer(mqttServer, mqttPort);
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
}
